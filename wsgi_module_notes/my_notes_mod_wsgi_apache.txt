Using mod_wsgi with my server

The mod_wsgi package implements a simple to use Apache module 
which can host any Python web application which supports the Python WSGI specification.

There are 2 ways : 
1.traditional CMMI (configure script, make, make install) to install mod_wsgi.so (shared library)
2.using pip command from PyPi and to start it with mod_wsgi-express

Make sure to install "apache2-dev" (needed for (apache extension tools)apxs2 - tool for build and install apache modules (/usr/bin/apxs2).
Using apache version 2.4 (dpkg -p | grep apache2, or apachectl -V | grep -i "Server version")
Important is MPM (multi process module) (event, ...)
After "make" => "mod_wsgi.so" generated to ./src/server/.libs sudbdirectory
Aftr "make install" => in /usr/lib/apache2/modules added .so file ( check it with $ ldd (prints shared object dependencies, python2.7 should be seen))
Run "make clean" after.
Configure apache to load the module:
Note "httpd.conf" is deprecated, use apach2/conf-available/{name},conf instead,
for VirtualHost use /etc/apache2/sites-available/{name}.conf in conjuction with "a2ensite/a2dissite" service to symlink file
for global configuration use /etc/apache2/apache2.conf file (this will be updated in future upgrades) rarely use it.

	>> Create custom conf file /etc/apache2/conf-available/{name}.conf
	>> Add folowing:
			LoadModule wsgi_module # [1]
			WSGIScriptAlias /test_wsgi2 /var/www/wsgi-scripts/test-wsgi.py  #[2] working
			http://163.172.171.154/test_wsgi2
			WSGIScriptAlias /test_wsgi /home/anel/workspace/wsgi-scripts/test-wsgi.py  #[3] ->forbidden no permission although is set in sites-availabel/.conf file
			WSGIScriptAlias /test_wsgi1 /var/www/wsgi-scripts/first_wsgi.wsgi # [4] after the restart it works 
			http://163.172.171.154/test_wsgi1
	>> With #[1] line we are importing wsgi_module (can be seen from -M)
	>> Line #[2] we needed to create a python file (or script file should end with .wsgi [4]->from custom folder  didn't work for me [3])
				/* ********************** */
				      test-wsgi.py
				/* ********************** */
				def application(environ,start_response):
						status = '200 OK'
						html = '<html>\n' \
								'<body>\n' \
								'<div style="width: 100%; font-size: 40px; font-weight: bold; text-align: center;">\n' \
								'mod_wsgi Test Page\n' \
								'</div>\n' \
								'</body>\n' \
								'</html>\n'
						response_header = [('Content-type','text/html')]
						start_response(status,response_header)
						return [html]
						
				/* ********************** */
				      first_wsgi.wsgi
				/* ********************** */						
						def application(environ, start_response):
							status = '200 OK'
							output = b'Hello World!'

							response_headers = [('Content-type', 'text/plain'),
												('Content-Length', str(len(output)))]
							start_response(status, response_headers)

							return [output]


 I also added myconfig.conf in /etc/apache2/sites-available/myconfig.conf and linked it with a2ensite
				/* ********************** */
				/sites-available/myconfig.conf  
				# didn't work
				# Even if changed for directory in apache2.conf => /var/www AllowOverride from None to All
				/* ********************** */
				<VirtualHost *:80> 

				  ServerName localhost
				  ServerAlias test1.com 
				  ServerAdmin webmaster@test1.com
				  Alias /static /var/www/first_wsgi/static/  # needed for admin interface for django
				  <Directory /var/www/wsgi-scripts/>
					Order allow,deny
					  Allow from all
					<IfVersion < 2.4>
					  Order allow,deny
					  Allow from all
					</IfVersion>
					<IfVersion >= 2.4>
					  Require all granted
					</IfVersion>
				  </Directory>

				  WSGIDaemonProcess test1.com processes=2 threads=15 display-name=%{GROUP}
				  WSGIProcessGroup test1.com
				  WSGIScriptAlias /test_wsgi /home/anel/workspace/wsgi-scripts/first_wsgi.wsgi  # not working
				  WSGIScriptAlias /test_wsgi /var/www/wsgi-scripts/first_wsgi.wsgi  # not working

				  <Directory /home/anel/workspace/wsgi-scripts>
					<IfVersion < 2.4>
					  Order allow,deny
					  Allow from all
					</IfVersion>
					<IfVersion >= 2.4>
					  Require all granted
					</IfVersion>
				  </Directory>

				</VirtualHost>
				/* ********************** */
	>> Can change files (debug mode)
	>> Symlink {name}.conf to /etc/apache2/conf-enabled => 
		$sudo ln -s /etc/apache2/conf-available/{name}.conf /etc/apache2/conf-enabled/conf 
		or $ sudo a2enconf /etc/apache2/conf-available/{name}.conf
	>> Go to http://163.172.171.154/test_wsgi2  
Apache uses global cross process mutexes to control which of next child processget the chance to accept the connection from http client.
Cross mutexes can be implemented with various mechanism (flock,fcntl, sysvsem, posixsem, pthread) (whcih can be overriden).
To find where are arguments used to "configure" apache:
>> Find binary for apxs2 = > /usr/bin/apxs2 
>> Open it and find "#installbuilddir" = > /usr/share/apache2/build
>> Open "config.nice" and see parameters (you can see that enabled-layout is Debian, and with-suexec-caller=www-data)
To see the version:
$ apachectl -V
One can see also used cross process mutexes with SERIALIZE extension : -D SYSVSEM_SERIALIZE, PTHREAD (order important)
"apr.h" apache runtime header.
We can set "AcceptMutex" or "WSGIAcceptMutex" in apache config file 
To see the list of statically compiled modules:
$ apachectl -l   ( we can find mod_so.c apache module that handles the task of dynamically loaded other apche modules)
To see the list of dynamically compiled modules:
$ apachectl -M  ( should see at the end "wsgi_module.so" as shared module)

Restart apache service:
1. sudo service apache2 load/start/restart
2. sudo /etc/init.d/apache2 restart
3. apachectl restart
4.  Debian based: sudo invoke-rc.d apache2 restart 

To find error log:
grep CustomLog /etc/apache2/apache2.conf = > 
/var/log (make sure to add user to a group "adm" $sudo usermod -aG adm anel)

Save and close without sudo permission file in vim:
$ :w ! sudo tee % > /dev/null  ( % -> current file)

From /etc/apache2/apache2.conf 
changed for directory /var/www AllowOverride from None to All


ToDo:
a)
check virtualenvironment:
WSGIPythonHome /path/to/venv
WSGIPythonPath /path/to/mysite.com
b)
Do the same procedure with "pip"
c) 
Check bottle python webframework..noo
d)
Have seen that for configuring the django, interface to communicatie with python trhough apache is used as:
$ sudo apt-get install libapache2-mod-wsgi
WSGI script files are needed for each django project,we want to deploy on our server so for app1.wsgi:
		/* ********************** */
				app1.py
		/* ********************** */
		import os
		import sys
		import django.core.handlers.wsgi
		sys.path=['/var/www/app1']+sys.path
		os.environ['DJANGO_SETTINGS_MODULE']='app1.settings'
		application= django.core.handlers.wsgi.WSGIHandler()
		/* ********************** */
		/sites-available/app1.conf -> same as above (do $sudo -s)
		/* ********************** */
Helpfull links:
https://modwsgi.readthedocs.io/en/develop/
https://pypi.org/project/mod_wsgi/
https://devops.profitbricks.com/tutorials/install-and-configure-mod_wsgi-on-ubuntu-1604-1/

